<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="ff9610d3-dbce-41e4-b4ec-723f360ae1e5" name="Changes" comment="">
      <change afterPath="$PROJECT_DIR$/.idea/Crashy.iml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/run.cmd" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.fleet/settings.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/aws.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/compiler.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/gradle.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/gradle.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/inspectionProfiles/Project_Default.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/inspectionProfiles/Project_Default.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/misc.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/modules.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/modules.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/runConfigurations/All_JS_Tests.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/runConfigurations/All_JS_Tests.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/runConfigurations/All_Server_Tests.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/runConfigurations/All_Server_Tests.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/runConfigurations/Run_Server.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/runConfigurations/Run_Server.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/scopes/Crashy.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/scopes/Crashy.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/uiDesigner.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/client/.eslintrc.json" beforeDir="false" afterPath="$PROJECT_DIR$/client/.eslintrc.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/client/.idea/.gitignore" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/client/.idea/client.iml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/client/.idea/inspectionProfiles/Project_Default.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/client/.idea/misc.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/client/.idea/modules.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/client/.idea/vcs.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/client/package-lock.json" beforeDir="false" afterPath="$PROJECT_DIR$/client/package-lock.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/client/package.json" beforeDir="false" afterPath="$PROJECT_DIR$/client/package.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/client/public/vite.svg" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/client/src/fudge-commons/methods/Http.ts" beforeDir="false" afterPath="$PROJECT_DIR$/client/src/fudge-commons/methods/Http.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/client/src/mappings/providers/IntermediaryMappingsProvider.ts" beforeDir="false" afterPath="$PROJECT_DIR$/client/src/mappings/providers/IntermediaryMappingsProvider.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/client/src/mappings/providers/McpMappingsProvider.ts" beforeDir="false" afterPath="$PROJECT_DIR$/client/src/mappings/providers/McpMappingsProvider.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/client/src/mappings/providers/MojangMappingsProvider.ts" beforeDir="false" afterPath="$PROJECT_DIR$/client/src/mappings/providers/MojangMappingsProvider.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/client/src/mappings/providers/ProviderUtils.ts" beforeDir="false" afterPath="$PROJECT_DIR$/client/src/mappings/providers/ProviderUtils.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/client/src/mappings/providers/SrgMappingsProvider.ts" beforeDir="false" afterPath="$PROJECT_DIR$/client/src/mappings/providers/SrgMappingsProvider.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/client/src/mappings/providers/YarnMappingsProvider.ts" beforeDir="false" afterPath="$PROJECT_DIR$/client/src/mappings/providers/YarnMappingsProvider.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/client/src/server/CrashyServer.ts" beforeDir="false" afterPath="$PROJECT_DIR$/client/src/server/CrashyServer.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/client/src/test/mappings/MappingsProvidersTest.test.ts" beforeDir="false" afterPath="$PROJECT_DIR$/client/src/test/mappings/MappingsProvidersTest.test.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/client/src/test/mappings/MappingsTest.test.ts" beforeDir="false" afterPath="$PROJECT_DIR$/client/src/test/mappings/MappingsTest.test.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/client/src/ui/crashreport/valid/CrashContextUi.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/client/src/ui/crashreport/valid/CrashContextUi.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/client/src/ui/crashreport/valid/StackTraceUi.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/client/src/ui/crashreport/valid/StackTraceUi.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/client/vite.config.ts" beforeDir="false" afterPath="$PROJECT_DIR$/client/vite.config.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/compat/.gitignore" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/compat/functions/.gitignore" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/server/build.gradle.kts" beforeDir="false" afterPath="$PROJECT_DIR$/server/build.gradle.kts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/test.txt" beforeDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="ExternalProjectsData">
    <projectState path="$PROJECT_DIR$/server">
      <ProjectState />
    </projectState>
  </component>
  <component name="ExternalProjectsManager">
    <system id="GRADLE">
      <state>
        <task path="$PROJECT_DIR$/server">
          <activation />
        </task>
        <projects_view>
          <tree_state>
            <expand>
              <path>
                <item name="" type="6a2764b6:ExternalProjectsStructure$RootNode" />
                <item name="Crashy" type="f1a62948:ProjectNode" />
              </path>
              <path>
                <item name="" type="6a2764b6:ExternalProjectsStructure$RootNode" />
                <item name="Crashy" type="f1a62948:ProjectNode" />
                <item name="Tasks" type="e4a08cd1:TasksNode" />
              </path>
              <path>
                <item name="" type="6a2764b6:ExternalProjectsStructure$RootNode" />
                <item name="Crashy" type="f1a62948:ProjectNode" />
                <item name="Tasks" type="e4a08cd1:TasksNode" />
                <item name="crashy" type="c8890929:TasksNode$1" />
              </path>
              <path>
                <item name="" type="6a2764b6:ExternalProjectsStructure$RootNode" />
                <item name="Crashy" type="f1a62948:ProjectNode" />
                <item name="Tasks" type="e4a08cd1:TasksNode" />
                <item name="crashy setup" type="c8890929:TasksNode$1" />
              </path>
            </expand>
            <select />
          </tree_state>
        </projects_view>
      </state>
    </system>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="NamedScopeManager">
    <order>
      <scope name="Crashy" />
    </order>
  </component>
  <component name="ProjectId" id="2LaSDIItpiOuBOpBSG3IX907Dri" />
  <component name="ProjectLevelVcsManager">
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="autoscrollFromSource" value="true" />
    <option name="compactDirectories" value="true" />
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,
    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,
    &quot;git-widget-placeholder&quot;: &quot;main&quot;,
    &quot;ignore.virus.scanning.warn.message&quot;: &quot;true&quot;,
    &quot;ktor.last.update.timestamp&quot;: &quot;1676107626215&quot;,
    &quot;last_opened_file_path&quot;: &quot;C:/Users/natan/Desktop/Crashy&quot;,
    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
    &quot;nodejs.jest.jest_package&quot;: &quot;C:/Users/natan/Desktop/Crashy/client/node_modules/vitest&quot;,
    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
    &quot;project.structure.last.edited&quot;: &quot;Modules&quot;,
    &quot;project.structure.proportion&quot;: &quot;0.0&quot;,
    &quot;project.structure.side.proportion&quot;: &quot;0.0&quot;,
    &quot;settings.editor.selected.configurable&quot;: &quot;project.scopes&quot;,
    &quot;ts.external.directory.path&quot;: &quot;C:\\Users\\natan\\Desktop\\Crashy\\client\\node_modules\\typescript\\lib&quot;,
    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
  }
}</component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="C:\Users\natan\Desktop\Crashy" />
      <recent name="C:\Users\natan\Desktop\Crashy\.idea" />
    </key>
  </component>
  <component name="RunManager" selected="Gradle.Upload Beta Server">
    <configuration name="Upload Beta Server" type="GradleRunConfiguration" factoryName="Gradle">
      <ExternalSystemSettings>
        <option name="executionName" />
        <option name="externalProjectPath" value="$PROJECT_DIR$/server" />
        <option name="externalSystemIdString" value="GRADLE" />
        <option name="scriptParameters" value="" />
        <option name="taskDescriptions">
          <list />
        </option>
        <option name="taskNames">
          <list>
            <option value="uploadToEc2Beta" />
          </list>
        </option>
        <option name="vmOptions" />
      </ExternalSystemSettings>
      <ExternalSystemDebugServerProcess>true</ExternalSystemDebugServerProcess>
      <ExternalSystemReattachDebugProcess>true</ExternalSystemReattachDebugProcess>
      <DebugAllEnabled>false</DebugAllEnabled>
      <ForceTestExec>false</ForceTestExec>
      <method v="2" />
    </configuration>
    <configuration name="server [runJarWindows]" type="GradleRunConfiguration" factoryName="Gradle" temporary="true">
      <ExternalSystemSettings>
        <option name="executionName" />
        <option name="externalProjectPath" value="$PROJECT_DIR$/server" />
        <option name="externalSystemIdString" value="GRADLE" />
        <option name="scriptParameters" />
        <option name="taskDescriptions">
          <list />
        </option>
        <option name="taskNames">
          <list>
            <option value="runJarWindows" />
          </list>
        </option>
        <option name="vmOptions" />
      </ExternalSystemSettings>
      <ExternalSystemDebugServerProcess>true</ExternalSystemDebugServerProcess>
      <ExternalSystemReattachDebugProcess>true</ExternalSystemReattachDebugProcess>
      <DebugAllEnabled>false</DebugAllEnabled>
      <ForceTestExec>false</ForceTestExec>
      <method v="2" />
    </configuration>
    <configuration name="Remapping from yarn to mojmap works correctly" type="JavaScriptTestRunnerVitest" temporary="true" nameIsGenerated="true">
      <node-interpreter value="project" />
      <vitest-package value="$PROJECT_DIR$/client/node_modules/vitest" />
      <working-dir value="$PROJECT_DIR$/client" />
      <envs />
      <scope-kind value="TEST" />
      <test-file value="$PROJECT_DIR$/client/src/test/mappings/MappingsTest.test.ts" />
      <test-names>
        <test-name value="Remapping from yarn to mojmap works correctly" />
      </test-names>
      <method v="2" />
    </configuration>
    <configuration name="Remapping m_7731 works to intermediary works" type="JavaScriptTestRunnerVitest" temporary="true" nameIsGenerated="true">
      <node-interpreter value="project" />
      <vitest-package value="$PROJECT_DIR$/client/node_modules/vitest" />
      <working-dir value="$PROJECT_DIR$/client" />
      <envs />
      <scope-kind value="TEST" />
      <test-file value="$PROJECT_DIR$/client/src/test/mappings/MappingsTest.test.ts" />
      <test-names>
        <test-name value="Remapping m_7731 works to intermediary works" />
      </test-names>
      <method v="2" />
    </configuration>
    <configuration name="Remapping works correctly" type="JavaScriptTestRunnerVitest" temporary="true" nameIsGenerated="true">
      <node-interpreter value="project" />
      <vitest-package value="$PROJECT_DIR$/client/node_modules/vitest" />
      <working-dir value="$PROJECT_DIR$/client" />
      <envs />
      <scope-kind value="TEST" />
      <test-file value="$PROJECT_DIR$/client/src/test/mappings/MappingsTest.test.ts" />
      <test-names>
        <test-name value="Remapping works correctly" />
      </test-names>
      <method v="2" />
    </configuration>
    <configuration name="Yarn mappings can be retrieved via new method" type="JavaScriptTestRunnerVitest" temporary="true" nameIsGenerated="true">
      <node-interpreter value="project" />
      <vitest-package value="$PROJECT_DIR$/client/node_modules/vitest" />
      <working-dir value="$PROJECT_DIR$/client" />
      <envs />
      <scope-kind value="TEST" />
      <test-file value="$PROJECT_DIR$/client/src/test/mappings/MappingsProvidersTest.test.ts" />
      <test-names>
        <test-name value="Yarn mappings can be retrieved via new method" />
      </test-names>
      <method v="2" />
    </configuration>
    <list>
      <item itemvalue="Attach to Node.js/Chrome.Attach To Server" />
      <item itemvalue="Gradle.Upload Release Server" />
      <item itemvalue="Gradle.Upload Beta Server" />
      <item itemvalue="Gradle.server [runJarWindows]" />
      <item itemvalue="JUnit.All Server Tests" />
      <item itemvalue="Kotlin.Run Server" />
      <item itemvalue="npm.Client Build Production" />
      <item itemvalue="npm.Client Development" />
      <item itemvalue="Vitest.All JS Tests" />
      <item itemvalue="Vitest.Remapping from yarn to mojmap works correctly" />
      <item itemvalue="Vitest.Remapping works correctly" />
      <item itemvalue="Vitest.Remapping m_7731 works to intermediary works" />
      <item itemvalue="Vitest.Yarn mappings can be retrieved via new method" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="Gradle.server [runJarWindows]" />
        <item itemvalue="Vitest.Remapping from yarn to mojmap works correctly" />
        <item itemvalue="Vitest.Remapping works correctly" />
        <item itemvalue="Vitest.Yarn mappings can be retrieved via new method" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="ff9610d3-dbce-41e4-b4ec-723f360ae1e5" name="Changes" comment="" />
      <created>1676107578747</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1676107578747</updated>
      <workItem from="1676107579741" duration="146000" />
      <workItem from="1676107729819" duration="2476000" />
      <workItem from="1676115750342" duration="3360000" />
      <workItem from="1676121828369" duration="567000" />
      <workItem from="1676128908019" duration="9768000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="UnknownFeatures">
    <option featureType="dependencySupport" implementationName="java:com.google.protobuf:protobuf-java" />
    <option featureType="dependencySupport" implementationName="java:com.google.cloud:google-cloud-storage" />
    <option featureType="dependencySupport" implementationName="java:io.grpc:grpc-api" />
    <option featureType="dependencySupport" implementationName="javascript:npm:vite" />
    <option featureType="dependencySupport" implementationName="java:software.amazon.awssdk:sdk-core" />
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <line-breakpoint enabled="true" type="kotlin-line">
          <url>file://$PROJECT_DIR$/server/src/main/kotlin/io/github/crashy/crashlogs/api/MappingsApi.kt</url>
          <line>20</line>
          <option name="timeStamp" value="7" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="javascript">
          <url>file://$PROJECT_DIR$/client/src/mappings/providers/IntermediaryMappingsProvider.ts</url>
          <line>12</line>
          <properties lambdaOrdinal="-1" />
          <option name="timeStamp" value="31" />
        </line-breakpoint>
      </breakpoints>
    </breakpoint-manager>
    <watches-manager>
      <configuration name="JavaScriptTestRunnerVitest">
        <watch expression="mappables.toArray()" language="TypeScript" />
        <watch expression="finalMappings.toSameRecord()" language="TypeScript" />
        <watch expression="unmapped.method.getUnmappedMethodName()" language="TypeScript" />
      </configuration>
    </watches-manager>
  </component>
</project>